<?php // New Update : 01-05-2020// Usage : This controller maintains gage espece products functionalities in the applicationdefined('BASEPATH') OR exit('No direct script access aloowed');class Credit_Conso extends Admin_Controller {	public function __construct()	{		parent::__construct();		$this->not_logged_in();		$this->data['title'] = 'Gabon | PP CONGES A LA CARTE';			$this->data['page'] = 'PP_CONGES_A_LA_CARTE';				$this->load->helper('lang_translate'); 		$this->load->helper('timeAgo');		$this->load->helper(array('dompdf', 'file')); 			$this->load->helper('url');		    	$this->load->model('Common_model');    	$this->load->model('Customer_Model');    	$this->load->model('Setting_Model');    	$this->load->model('PP_Credit_Scholar_Model');    	$this->load->model('PP_Consumer_Loans_Model');    	$this->load->model('Credit_Scolair_Model');    	$this->load->model('Credit_Conso_Model');    	$this->load->model('Employer_Model');    	$this->load->model('Secteur_Model');    	$this->load->model('EmployeeCategory_Model');    	$this->load->model('Admin_Model');    	$this->load->library('session');		    	$this->load->library('Class_Amort');		date_default_timezone_set('GMT');			}		/*------------------- Start manage gage espece--------------------*/	public function index($param=''){		$this->data['record'] = $this->Common_model->get_admin_details(2);		$this->data['loantype']=$this->PP_Consumer_Loans_Model->get_loanType();		$this->data['loantax']=$this->PP_Consumer_Loans_Model->get_taxType();		$this->data['loan_details'] =  $this->Credit_Conso_Model->get_loan_details_branchwise();		// echo '<pre>';		// print_r();		// die;		$this->data['fees']=$this->PP_Consumer_Loans_Model->get_All_fees();		$this->data['loanrange']=$this->PP_Consumer_Loans_Model->get_pprange();		$user_id = $this->session->userdata('id');		$is_admin = ($user_id == 1) ? true :false;		$this->data['is_admin'] = $is_admin;		$this->render_template2('customer_product/credit_conso/index', $this->data);						// $this->data['record']=$this->Common_model->get_admin_details(2);		// $this->data['loantype']=$this->PP_Consumer_Loans_Model->get_loanType();		// $this->data['loantax']=$this->PP_Consumer_Loans_Model->get_taxType();		// $this->data['loandetails']=$this->PP_Consumer_Loans_Model->get_new_application_form();		// // echo '<pre>';		// // print_r($this->data['loandetails']);		// // die;		// $this->data['fees']=$this->PP_Consumer_Loans_Model->get_All_fees();		// $this->data['loanrange']=$this->PP_Consumer_Loans_Model->get_pprange();		// $user_id = $this->session->userdata('id');		// $is_admin = ($user_id == 2) ? true :false;		// $this->data['is_admin'] = $is_admin;		// if($this->session->userdata('role')==='2'){					// 	$this->render_template2('superadmin/consumer_loan', $this->data);		// }else{					// 	$this->data['title'] = 'DCP | Access Denied';		// 	$this->simple_template('access_denied', $this->data);          		// }		}		public function add_loan(){		// echo "<pre>", print_r($_POST), "</pre>"; exit;		// $ip = $_SERVER['REMOTE_ADDR'];		$ip = '122.0.0.1';		// $this->form_validation->set_error_delimiters('<span>', '</span>');				// $this->form_validation->set_rules('loan_amt', 'Loan Amount', 'required');		// $this->form_validation->set_rules('loan_interest', 'Interest', 'required');		// $this->form_validation->set_rules('loan_term', 'Term', 'required');		// $this->form_validation->set_rules('vat_on_interest', 'Tax', 'required');		// $this->form_validation->set_rules('loan_commission', 'loan_commission', 'required');		// $this->form_validation->set_rules('loan_guarantee', 'loan_guarantee', 'required');		// if ($this->form_validation->run() == FALSE){		// 	$errors['error'] = validation_errors();		// 	echo json_encode($errors);		// }else{				$num =round(microtime(true)*1000);		$data = array(			'application_no'=>$num,			'admin_id'=>$this->session->userdata('id'),			'ip_address' => $ip,            'loan_type' => $this->input->post('loan_type'),            'loan_amt' => $this->input->post('loan_amt'),            'loan_interest' => $this->input->post('loan_interest'),            'loan_term' => $this->input->post('loan_term'),            'loan_schedule' => $this->input->post('loan_schedule'),            'loan_fee' => $this->input->post('loan_fee'),            'loan_tax' => $this->input->post('vat_on_interest'),			'loan_commission' => $this->input->post('loan_commission'),			'loan_guarantee' => $this->input->post('loan_guarantee'),			'annual_teg' => $this->input->post('annual_teg'),			'periodic_teg' => $this->input->post('periodic_teg'),			'wear_rate' => $this->input->post('wear_rate'),		);        $result['success']=$this->PP_Consumer_Loans_Model->insertRow('temp_consumer_applicationform',$data);        echo json_encode($result);    	//}    }        public function amortization_loan(){    	$this->data['title'] = 'DCP - CREDIT CONSO TABLEAU AMORTISSMENT';    	$id=$this->uri->segment(3); //exit;    	$this->data['record']=$this->Common_model->get_admin_details(1);    	$this->data['amortrecord']=$this->PP_Consumer_Loans_Model->get_Post_temp_applicationform($id);    	$this->data['testamortrecord']=$this->PP_Consumer_Loans_Model->test_amortization($id);    	//echo "<pre>", print_r($this->data['amortrecord']), "</pre>"; exit;    	$vat_on_interest=$this->data['amortrecord'][0]['loan_tax'] ?: '19.25';    	    	$validate=$this->PP_Consumer_Loans_Model->check_amortization($id);    	//echo $validate;    	if($validate>0){    		    		//redirect('PP_Consumer_Loans/Creditloan');    	} else{    			    	if($this->data['amortrecord'][0]['loan_schedule']=='Monthly'){				$year=($this->data['amortrecord'][0]['loan_term']/12);			}else if($this->data['amortrecord'][0]['loan_schedule']=='Yearly'){				$year=$this->data['amortrecord'][0]['loan_term'];			}			else if($this->data['amortrecord'][0]['loan_schedule']=='Half Yearly'){				$year=$this->data['amortrecord'][0]['loan_term']/6;			}			else if($this->data['amortrecord'][0]['loan_schedule']=='Quarterly'){				$year=$this->data['amortrecord'][0]['loan_term']/3;			}			$loan_interest =$this->data['amortrecord'][0]['loan_interest'];			$rt=($loan_interest*(1+$vat_on_interest/100));			$curd=date("Y-m-d", strtotime($this->data['amortrecord'][0]['created']));			$amount=$this->data['amortrecord'][0]['loan_amt'];			$rate=$rt;			$years=$year;	    	$am=new Class_Amort();	    	$am->amort($amount,$rate,$years,$curd, $loan_interest);	    	$return_arr=array();	    	//echo "<pre>", print_r($am), "</pre>"; //exit;	    		    	$return_arr1=array();			$postyer=$am->years*12;			$ebal = $am->amount;			$ccint =0.0;			$cpmnt = 0.0;			$cdate=$am->cdate;			$am->npmts;			for ($i = 1; $i <= $am->npmts; $i++){				$bbal = $ebal;    			    $ipmnt = $bbal * $am->mrate;			    $ppmnt = $am->pmnt - $ipmnt;			    $ebal = $bbal - $ppmnt;			    $ccint = $ccint + $ipmnt;			    $cpmnt = $am->pmnt;			    $pbint = $bbal*$am->postinterest/100/12;			    $vbint = $pbint*19.25/100;			    $months=$am->npmts;				$row_array['Pmt'] = $i;									$row_array['bbegin_periode'] = $bbal; 				$row_array['b_end_periode'] = $ebal;				$row_array['principal_payment'] = $ppmnt; 				$row_array['interest_paid_tax_incl'] = $ipmnt; 				$row_array['interest_paid_befor_tax'] = $pbint; 				$row_array['vat_on_interest'] = $vbint; 				$row_array['monthly_payment'] = $cpmnt; 				$row_array['month'] = date("m", strtotime( $cdate." +$i months"));				$row_array['years'] = date("Y", strtotime( $cdate." +$i months"));		    			    	array_push($return_arr,$row_array);		    }				//echo "<pre>", print_r($return_arr),"</pre>"; exit;				$databinding=json_encode($return_arr);				//$amortizationdatabinding=json_encode($return_arr,JSON_PRETTY_PRINT);					//header('Content-Type: application/json');				// echo "<pre>". $amortizationdatabinding."<pre>"."\n";				//exit;				$data = array(					'applicationform_id'=>trim($this->data['amortrecord'][0]['aid']),					'admin_id'=>$this->session->userdata('id'),								            'loan_type' =>trim($this->data['amortrecord'][0]['loan_type']),		            'amount' =>$am->amount,		            'interest' =>$am->postinterest,		            'rate' =>$am->rate,		            'years' =>$am->years,		            'npmts' =>$am->npmts,		            'mrate' =>$am->mrate,		            'smrate' =>$am->smrate,		            'tpmnt' =>$am->tpmnt,		            'tint' =>$am->tint,		            'pmnt' =>$am->pmnt,		            'cdate' =>$am->cdate,		            'databinding' => $databinding,		            'activate'=>'active'		        );		       // echo "<pre>", print_r($data),"</pre>"; exit;		    			$this->PP_Consumer_Loans_Model->insertRow('consumer_amortization',$data);		}    			$user_id = $this->session->userdata('id');		$is_admin = ($user_id == 2) ? true :false;		$this->data['is_admin'] = $is_admin;				if($this->session->userdata('role')==='2'){						$this->render_template2('superadmin/amortization', $this->data);		}else{						$this->data['title'] = 'DCP | Access Denied';			$this->simple_template('access_denied', $this->data);          		}		    }	public function select($loan){		$this->data['record'] = $this->Common_model->get_admin_details();		$this->data['dashboard_url'] =  'Dashboard';		$this->data['page_title'] =  'Credit Conso';		$this->data['loan'] =  $loan;		// $this->data['product'] = "credit_conso";		// $this->data['sub_product'] = $this->input->post('sub_product');		$this->data['secteurs']=$this->Secteur_Model->get_all_secteurs();		$this->data['cat_emp']=$this->EmployeeCategory_Model->get_all_categories();		$this->data['employers'] =  $this->Employer_Model->get_all_employers();		$this->data['contract_type']=$this->PP_Consumer_Loans_Model->get_type_of_contract();		$this->data['branch_record']=$this->PP_Consumer_Loans_Model->get_All_branch();		$this->data['nationality'] =  $this->Common_model->get_all_nationalities();		$user_id = $this->session->userdata('id');		$this->data['branchdata'] =  $this->Common_model->get_user_branch($user_id);		// Show Individual Form 		$this->data['addForm'] =  $this->load->view('customer/individual_customerForm',$this->data,true);		$this->data['individual_details'] = $this->Customer_Model->get_customer_branchwise('individual');		// Show Business Form 				$this->data['addbussinessForm'] =  $this->load->view('customer/business_customerForm',$this->data,true);		$this->data['business_details'] = $this->Customer_Model->get_customer_branchwise('business');		$this->render_template2('customer_product/credit_conso/select_customer2', $this->data);	}		public function select_customer()	{		$this->data['record']=$this->Common_model->get_admin_details();		$user_id = $this->session->userdata('id');		$this->data['secteurs']=$this->PP_Consumer_Loans_Model->get_target_list_Secteurs();		$this->data['cat_emp']=$this->PP_Consumer_Loans_Model->get_category_of_employers();		$this->data['contract_type']=$this->PP_Consumer_Loans_Model->get_type_of_contract();		$this->data['branch_record']=$this->PP_Consumer_Loans_Model->get_All_branch();		$is_admin = ($user_id != 1) ? true :false;		$this->data['bankdetails']=$this->PP_Consumer_Loans_Model->get_bankdetails();		$this->data['title'] = 'DCP - Customer Verification';		if($this->session->userdata('role')==='2'){						$this->render_template2('superadmin/consumerloans_select_customer', $this->data);		}else{						$this->data['title'] = 'DCP | Access Denied';			$this->simple_template('access_denied', $this->data);          		}	}	/*--------------------------Save Both Customer and Business Loan ---------------------------*/	public function save_customer_loan()	{		 $customer_id = $this->input->post('customer_id');		 $sub_product = $this->input->post('sub_product');		 $customer_type  =  $this->input->post('type');		 $loan_Id  =  $this->input->post('loan_id');		$res =  $this->Credit_Conso_Model->save_loan_application($customer_id,$sub_product,$customer_type,$loan_Id);	}	/*--------------------------Save Both Customer and Business Loan ---------------------------*/	/*--------------------------start View Both Customer and Business Loan Details---------------*/	public function customer_details($loan_id){		$this->data['record'] = $this->Common_model->get_admin_details();		$this->data['dashboard_url'] =  'Dashboard';		$this->data['page_title'] =  'PP CONGES A LA CARTE';		// Loan Details		$this->data['loan_details'] = $this->Credit_Conso_Model->get_single_loan_details($loan_id);				$this->data['loan_count'] = $this->Credit_Conso_Model->get_number_of_loans($this->data['loan_details']['customer_id']);		// print_r($this->data['loan_count']);		// die;		$this->data['decision_rec'] =  $this->Credit_Conso_Model->get_approval_decision_details($loan_id,"credit_conso");		$this->data['customer'] = json_decode($this->data['loan_details']['customer_data']);		$this->data['officer'] = json_decode($this->data['loan_details']['officer_data']);		$this->data['risk_analysis'] =  $this->Credit_Conso_Model->get_risk_analysis_details($loan_id);		$this->data['risk_analysis_facility'] =  $this->Credit_Conso_Model->get_risk_analysis_facility($loan_id);		$this->data['tracking_timeline'] =  $this->Credit_Conso_Model->get_tracking_details($loan_id);		$this->data['history_interaction'] =  $this->Credit_Conso_Model->get_interaction_history($loan_id);		$this->data['collateral']=$this->Credit_Conso_Model->get_collateral($loan_id);		$this->data['collateral_vehicule']=$this->Credit_Conso_Model->get_collateral_vehicule($loan_id);		$this->data['collateral_deposit']=$this->Credit_Conso_Model->get_collateral_deposit($loan_id);		$this->data['collateral_maison']=$this->Credit_Conso_Model->get_collateral_maison($loan_id);		$this->data['collateral_excemption']=$this->Credit_Conso_Model->get_collateral_excemption($loan_id);		$this->data['riskcurrentmonthlyvrefit']=$this->Credit_Conso_Model->get_current_monthly_credit($loan_id);		$this->data['riskpaymentnewloan']=$this->Credit_Conso_Model->get_monthly_payment_new_loan($loan_id);		$this->data['riskfsituation']=$this->Credit_Conso_Model->get_financial_situation($loan_id);		// print_r($this->data['riskfsituation']);		// die;		$cad_where =  array('loan_id'=>$loan_id);		$this->data['agcdecisionform'] =  $this->Common_model->getRecord('tbl_customer_cad_decision_form_n','',$cad_where);				// Master details		$this->data['product_tabs'] =  $this->Setting_Model->get_saved_product_tab_consumer($this->data['loan_details']['product_tab_data']);		if(isset($this->data['customer']->branch)){			$this->data['customer_branch'] =  $this->Admin_Model->get_branch_details($this->data['customer']->branch);		}		else		{			$this->data['customer_branch'] =  $this->Admin_Model->get_branch_details($this->data['customer']->branch_id);		}				$this->data['documents'] =  $this->Credit_Conso_Model->get_saved_documents($loan_id);		$this->data['secteurs']=$this->Secteur_Model->get_all_secteurs();		$this->data['employers'] =  $this->Employer_Model->get_all_employers();		$this->data['cat_emp']=$this->EmployeeCategory_Model->get_all_categories();		$this->data['contract_type']=$this->PP_Consumer_Loans_Model->get_type_of_contract();		$this->data['nationality'] =  $this->Common_model->get_all_nationalities();		$this->data['branch_record']=$this->PP_Consumer_Loans_Model->get_All_branch();						if($this->data['loan_details']['customer_type'] == "1")		{			$this->render_template2('customer_product/credit_conso/customer_details', $this->data);		}		else		{			$this->render_template2('customer_product/credit_conso/business_details', $this->data);		}			}	/*--------------------------End View Both Customer and Business Loan Details-----------------*/	public function manage_risk_analysis($loan_id)	{				$post_data =  array(							'cash_voucher' => $this->input->post('cash_voucher'),							'subscription_date' => date("Y-m-d", strtotime($this->input->post('subscription_date'))),							'due_date' => date("Y-m-d", strtotime($this->input->post('due_date'))),							'amount' => $this->input->post('amount'),							'subscriber' => $this->input->post('subscriber'),							'depositor' => $this->input->post('depositor'),							'assignment_account' => $this->input->post('assignment_account'),							'beneficiary' => $this->input->post('beneficiary'),							'subscription_location' => $this->input->post('subscription_location'),							'place_of_payment' => $this->input->post('place_of_payment')		);		$check_riskanalyse  =  $this->Gage_Espece_Model->get_risk_analysis_details($loan_id);		if(empty($check_riskanalyse))		{			$post_data['loan_id'] = $loan_id;			echo ($this->Common_model->insertRow('tbl_credit_conso_risk_analysis_facility',$post_data)) ? "success" : "error";					}		else		{			echo ($this->Common_model->updateRow('tbl_credit_conso_risk_analysis_facility','loan_id',$loan_id,$post_data)) ? "success" : "error"; 		}	}	public function manage_risk_analysis_facility($loan_id)	{		$post_data =  array(							'nature_of_facility' => $this->input->post('nature_of_facility'),							'object' => $this->input->post('object'),							'deadline_date' => date("Y-m-d", strtotime($this->input->post('deadline_date'))),							'granted_amount' => $this->input->post('granted_amount'),							'tax_interest' => $this->input->post('tax_interest'),							'transaction_unfolded' => $this->input->post('transaction_unfolded'),							'how_to_use' => $this->input->post('how_to_use'),							'implementation_cost' => $this->input->post('implementation_cost'),							'death_insurance' => $this->input->post('death_insurance'),							'gaurantee_fund' => $this->input->post('gaurantee_fund')		);		$check_riskanalyse  =  $this->Gage_Espece_Model->get_risk_analysis_facility($loan_id);		if(empty($check_riskanalyse))		{			$post_data['loan_id'] = $loan_id;			echo ($this->Common_model->insertRow('tbl_credit_conso_risk_analysis_facility',$post_data)) ? "success" : "error";					}		else		{			echo ($this->Common_model->updateRow('tbl_credit_conso_risk_analysis_facility','loan_id',$loan_id,$post_data)) ? "success" : "error"; 		}	}	/*------------------- End manage gage espece--------------------*/	public function edit_loan(){    	    	sleep(2);		// $crecord=$this->PP_Consumer_Loans_Model->get_checkfieldandvalue($this->input->post('editid'));		$crecord=$this->Credit_Conso_Model->get_checkfieldandvalue($this->input->post('loan_id_temp'));		$erecord=$this->PP_Consumer_Loans_Model->get_edit_customar_applicationform($this->input->post('editid'));		//echo $erecord[0]['amortization_id']; exit;		$da=json_decode($erecord[0]['appliedformdata']);		$this->form_validation->set_rules('loan_type', 'Loan Type', 'required');    	$this->form_validation->set_rules('loan_amt', 'Amount','trim|required');    	$this->form_validation->set_rules('loan_interest', 'Interest','trim|required');    	$this->form_validation->set_rules('loan_term', 'Term', 'required');		$this->form_validation->set_rules('loan_schedule', 'Schedule', 'required');        	$amount=trim($this->input->post('loan_amt'));					$rate=trim($this->input->post('loan_interest'));			$rt=($rate*(1+19.25/100));			$rate=$rt;			if($this->input->post('loan_schedule')=='Monthly'){				$year=(trim($this->input->post('loan_term'))/12);			}else if($this->input->post('loan_schedule')=='Yearly'){				$year=trim($this->input->post('loan_term'));			}			else if($this->input->post('loan_schedule')=='Half Yearly'){				$year=trim($this->input->post('loan_term')*2/12);			}			$years=$year;			$years=$years;			$curd=date("Y-m-d", strtotime($erecord[0]['created']));			$loan_interest =$rate;				$am=new Class_Amort();			$am->amort($amount,$rate,$years,$curd, $loan_interest);				//echo "<pre>", print_r($am), "</pre>"; exit;			$return_arr1=array();			$postyer=$am->years*12;			$ebal = $am->amount;			$ccint =0.0;			$cpmnt = 0.0;			$cdate=$am->cdate;			for ($i = 1; $i <= $am->npmts; $i++){				$bbal = $ebal;    			    $ipmnt = $bbal * $am->mrate;			    $ppmnt = $am->pmnt - $ipmnt;			    $ebal = $bbal - $ppmnt;			    $ccint = $ccint + $ipmnt;			    $cpmnt = $am->pmnt;			    $pbint = $bbal*$this->input->post('loan_interest')/100/12;			    $vbint = $pbint*19.25/100;			    $months=$am->npmts;				$rowarray['Pmt'] = $i;									$rowarray['bbegin_periode'] = $bbal; 				$rowarray['b_end_periode'] = $ebal;				$rowarray['principal_payment'] = $ppmnt; 				$rowarray['interest_paid_tax_incl'] = $ipmnt; 				$rowarray['interest_paid_befor_tax'] = $pbint; 				$rowarray['vat_on_interest'] = $vbint; 				$rowarray['monthly_payment'] = $cpmnt; 				$rowarray['month'] = date("m", strtotime( $cdate." +$i months"));				$rowarray['years'] = date("Y", strtotime( $cdate." +$i months"));		    			    	array_push($return_arr1,$rowarray);		    }		    $amortizationdatabinding=json_encode($return_arr1);		    $row_array=array();			$return_arr=array(				"application_no" =>$da[0]->application_no,	            "ip_address" =>$da[0]->ip_address,	            "loan_type"=>$da[0]->loan_type,	            "loan_amt"=>$this->input->post('loan_amt'),	            "loan_interest"=>$this->input->post('loan_interest'),	            "loan_term"=>$this->input->post('loan_term'),	            "loan_schedule"=>$this->input->post('loan_schedule'),	            "loan_fee"=>$this->input->post('loan_fee'),	            "loan_tax"=>$this->input->post('loan_tax'),	            "loan_commission"=>$this->input->post('loan_commission')		    );	    					array_push($row_array, $return_arr);			$databinding=json_encode($row_array);			$update_amortization=array(					"applicationform_id"=>trim($this->input->post('editid')),					"admin_id"=>trim($this->session->userdata('id')),					"loan_type"=>trim($this->input->post('loan_type')),					"amount" =>trim($this->input->post('loan_amt')),					"interest"=>trim($this->input->post('loan_interest')),					"rate"=>trim($am->rate),					"years"=>$postyer,					"npmts"=>trim($am->npmts),					"mrate"=>trim($am->mrate),					"smrate"=>trim($am->smrate),					"tpmnt"=>trim($am->tpmnt),					"tint"=>trim($am->tint),					"pmnt"=>trim($am->pmnt),					"cdate"=>trim($am->cdate),					"databinding"=>trim($amortizationdatabinding),				);			$data = array(				            	            'loan_amt' =>trim($this->input->post('loan_amt')),	            'loan_interest' => $this->input->post('loan_interest'),	            'loan_term' => $this->input->post('loan_term'),	            'loan_schedule' => $this->input->post('loan_schedule'),            	            'loan_fee' => $this->input->post('loan_fee'),	            // 'loan_tax' => $this->input->post('loan_tax'),	            // 'loan_commission' => $this->input->post('loan_commission')	        );		$msg='Updated Loan Information ';				if($crecord[0]->loan_amt!=$this->input->post('loan_amt')){		$msg .='amount is '.$crecord[0]->loan_amt.' to '.$this->input->post('loan_amt').'|';		}		if($crecord[0]->loan_interest!=$this->input->post('loan_interest')){			$msg .='interest is '.$crecord[0]->loan_interest.' to '.$this->input->post('loan_interest').'';		}		if($crecord[0]->loan_term!=$this->input->post('loan_term')){			$msg .='term is '.$crecord[0]->loan_term.' to '.$this->input->post('loan_term').'|';		}		if($crecord[0]->loan_schedule!=$this->input->post('loan_schedule')){			$msg .='schedule is '.$crecord[0]->loan_schedule.' to '.$this->input->post('loan_schedule').'';		}		// if($crecord[0]->loan_tax!=$this->input->post('loan_tax')){		// 	$msg .='taxes is '.$crecord[0]->loan_tax.' to '.$this->input->post('loan_tax').'|';					// }		// if($crecord[0]->loan_commission!=$this->input->post('loan_commission')){		// 	$msg .='commission is '.$crecord[0]->loan_commission.' to '.$this->input->post('loan_commission').'|';		// }       		$msg=str_replace('|', ', ', $msg); 		        $edit=$this->PP_Consumer_Loans_Model->updateRow('tbl_temp_consumer_applicationform', 'aid', $this->input->post('loan_id_temp'),$data);        // $Amortization=$this->PP_Consumer_Loans_Model->updateRow('consumer_amortization', 'id',$erecord[0]['amortization_id'], $update_amortization);        	                $details=$msg;					$history_arr=array(				"loan_id" =>$this->input->post('loan_id'),				"user_id" =>$this->session->userdata('id'),								"comment" =>$details,				"product_type"=>"credit_conso",							"created_at" =>date('Y-m-d h:i:s')			);			$this->PP_Consumer_Loans_Model->insertRow('business_tracking_timeline',$history_arr);        if($edit){        	echo 1;        }		           }    public function riskanalysis_current_monthly_credit()	{		$recordcheck=$this->PP_Consumer_Loans_Model->check_riskanalysis_current_monthly_credit($this->input->post('cl_aid'));		// print_r($this->input->post());		// die;		$data = array(				'admin_id'=>$this->session->userdata('id'),				'cap_id' =>trim($this->input->post('cl_aid')),			'loan_type' => $this->input->post('loan_type'),			'section'=>1,			// 'cresco'=> $this->input->post('cresco_current'),			// 'decouvert' => $this->input->post('decouvert_current'),			// 'cmt' => $this->input->post('cmt_current'),			// 'cct' => $this->input->post('cct_current'),			'total_clc' => $this->input->post('total_clc'),			'Salaire1' => $this->input->post('Salaire1'),			'Salaire2' => $this->input->post('Salaire2'),			'Salaire3' => $this->input->post('Salaire3'),			'Ttotal2' => $this->input->post('Ttotal2'),			'salaryAnnual' => $this->input->post('salaryAnnual'),			'score' => $this->input->post('score')		);		if(!empty($recordcheck)){			$edit=$this->PP_Consumer_Loans_Model->updateRow('riskanalysis_current_monthly_credit', 'rcic_id', $recordcheck,$data);			if($edit){				echo 1;			}else{				echo 0;			}		}else{			$add=$this->PP_Consumer_Loans_Model->insertRow('riskanalysis_current_monthly_credit',$data);			if($add){				echo 1;			}else{				echo 0;			}		}				}		public function riskanalysis_monthly_payment_new_loan()	{		//echo "<pre>", print_r($_POST),"</pre>";exit;				$recordcheck=$this->PP_Consumer_Loans_Model->check_riskanalysis_monthly_payment_new_loan($this->input->post('rcapid'));		$data = array(				'admin_id'=>$this->session->userdata('id'),				'cap_id' =>trim($this->input->post('rcapid')),						'loan_type' => $this->input->post('loan_type'),			'section'=>2,			'cresco'=> $this->input->post('cresco_monthly'),			'decouvert' => $this->input->post('decouvert_monthly'),			'cmt' => $this->input->post('cmt_monthly'),			'cct' => $this->input->post('cct_monthly'),			'total_mlc' => $this->input->post('total_mlc'),		);		if(!empty($recordcheck)){			$edit=$this->PP_Consumer_Loans_Model->updateRow('riskanalysis_monthly_payment_new_loan', 'rmic_id', $recordcheck,$data);			if($edit){				echo 1;			}else{				echo 0;			}		}else{			$add=$this->PP_Consumer_Loans_Model->insertRow('riskanalysis_monthly_payment_new_loan',$data);			if($add){				echo 1;			}else{				echo 0;			}		}			// echo $this->db->last_query();		}		public function riskanalysis_financial_situation()	{		$recordcheck=$this->PP_Consumer_Loans_Model->check_riskanalysis_financial_situation($this->input->post('cl_aid'));			$situation_total=isset($situation_total)?$situation_total:NULL;		$income_ratio_after=isset($income_ratio_after)?$income_ratio_after:NULL;		$data = array(				'admin_id'=>$this->session->userdata('id'),				'cap_id' =>trim($this->input->post('cl_aid')),						'loan_type' => $this->input->post('loan_type'),			'section'=>2,			'net_salary'=> $this->input->post('net_salary'),			'income_ratio' => $this->input->post('income_ratio'),			'quotitecessible' => $this->input->post('quotitecessible'),			'current_monthly_payments' => $this->input->post('current_monthly_payments'),			'new_monthly_payment' => $this->input->post('new_monthly_payment'),			'situation_total' => $this->input->post('situation_total'),			'income_ratio_after' =>$this->input->post('income_ratio_after'),			'coeficientendettement' => $this->input->post('coeficientendettement'),		);		if(!empty($recordcheck)){				$edit=$this->PP_Consumer_Loans_Model->updateRow('riskanalysis_financial_situation', 'rfs_id', $recordcheck,$data);			if($edit){				echo $this->db->last_query();;			}else{				echo $this->db->last_query();;			}		}else{			$add=$this->PP_Consumer_Loans_Model->insertRow('riskanalysis_financial_situation',$data);			if($add){				echo $this->db->last_query();;			}else{				echo $this->db->last_query();;			}		}	}		 /*Collateral Section*/    public function uploadfile_collateral_vehicule()	{				// print_r($_POST['loan_id']);		// die;		 if($_FILES["files"]["name"] != '')			  {			   $output='';				$return_arr = array();			   			   $config["upload_path"] = './assets/collateral/vehicule/';			   //$config["allowed_types"] = 'pdf|doc|docx|jpg|png|jpeg|jpe|xml';			   $config["allowed_types"] = '*';			   $config['max_size'] = '0';			   $config['overwrite'] = '0';			   $config['encrypt_name'] = FALSE;			   $config['remove_spaces'] = TRUE;			   $config['file_ext_tolower'] = TRUE;			   /*$ext=preg_replace("/.*\.([^.]+)$/","\\1", $_FILES['files']['name']);			   $fileType=$_FILES['userfile']['type'];			   $config['allowed_types']= $ext.'|'.$fileType;*/			   			   $this->load->library('upload', $config);			   $this->upload->initialize($config);			   $filesCount = count($_FILES['files']['name']);								$this->form_validation->set_error_delimiters('<p>', '</p>');				$this->form_validation->set_rules('vehicule_type','Type', 'required');				$this->form_validation->set_rules('vehicule_marque','Marque', 'required');				$this->form_validation->set_rules('vehicule_modele','Modèle', 'required');				$this->form_validation->set_rules('vehicule_carte_grise','Carte Grise', 'required');				$this->form_validation->set_rules('vehicule_style','Style', 'required');				$this->form_validation->set_rules('vehicule_annee','Année', 'required');				$this->form_validation->set_rules('vehicule_kilometrage','Kilométrage', 'required');				//$this->form_validation->set_rules('vehicule_commentaire','Commentaire', 'required');				$this->form_validation->set_message('required', 'You missed the input {field}!');				if ($this->form_validation->run() == FALSE)				{					$output=array('error'=> validation_errors());					}else{					sleep(1);					$data= array(						'cl_aid'=>$_POST['loan_id'],						'admin_id'=>trim($this->session->userdata('id')),												'customer_id'=>$this->input->post('vcustomar_id'),						'selected_field'=>trim($this->input->post('collateraltype')),						'v_type'=>$this->input->post('vehicule_type'),						'v_marque'=>$this->input->post('vehicule_marque'),						'v_modele'=>$this->input->post('vehicule_modele'),						'v_carte_grise'=>$this->input->post('vehicule_carte_grise'),						'v_style'=>$this->input->post('vehicule_style'),						'v_annee'=>$this->input->post('vehicule_annee'),						'v_kilometrage'=>$this->input->post('vehicule_kilometrage'),						'v_commentaire'=>$this->input->post('vehicule_commentaire'),						'loan_type'=>2,						'section'=>2,					);					$getid=$this->Common_model->insertRow('collateral',$data);					if($getid){			   						for($count =0; $count<$filesCount; $count++)						{							$_FILES["file"]["name"] = time().$_FILES["files"]['name'][$count];							$_FILES["file"]["type"] = $_FILES["files"]["type"][$count];							$_FILES["file"]["tmp_name"] = $_FILES["files"]["tmp_name"][$count];							$_FILES["file"]["error"] = $_FILES["files"]["error"][$count];							$_FILES["file"]["size"] = $_FILES["files"]["size"][$count];							if(!$this->upload->do_upload('file'))							{								$output=array('error' => $this->upload->display_errors('', ''));					}else{						$filename = $this->upload->data();							$filedata= array(								'collateral_id'=>$getid,														'file_name'=>$filename['file_name'],								'file_type'=>$filename['file_type'],								'file_path'=>$filename['file_path'],								'full_path'=>$filename['full_path'],								'raw_name'=>$filename['raw_name'],								'orig_name'=>$_FILES["files"]['name'][$count],								'client_name'=>$filename['client_name'],								'file_extension'=>$filename['file_ext'],								'file_size'=>$filename['file_size'],								'loan_type'=>2,								'section'=>2,							);										$rsid=$this->Common_model->insertRow('collateral_files',$filedata);							$details="Collateral Véhicule ".$filesCount." file upload.";							$history_arr=array(								"cl_aid" =>$_POST['loan_id'],								"admin_id" =>$this->session->userdata('id'),								"customar_id" =>$this->input->post('vcustomar_id'),								"loan_type"=>2,								"comment" =>$details,											"created" =>date('Y-m-d H:i:s')							);							$this->Common_model->insertRow('tracking_timeline',$history_arr);							$output=array('success' => $filesCount." files successfully upload.");							}						}					}			   }			   			   echo json_encode($output);			  }			}	public function uploadfile_collateral_deposit()	{		if($_FILES["files"]["name"] != '')			{			   $output = '';			   $config["upload_path"] = './assets/collateral/deposit/';			   //$config["allowed_types"] = 'pdf|doc|docx|jpg|png|jpeg|jpe|xml|JPG|PNG';			   $config["allowed_types"] = '*';			   $config['max_size'] = '0';			   $config['overwrite'] = '0';			   $config['encrypt_name'] = TRUE;			   $config['remove_spaces'] = TRUE;			   $config['file_ext_tolower'] = TRUE;			   //$this->_file_mime_type($_FILES[$field]); var_dump($this->file_type); die();			   $this->load->library('upload', $config);			   $this->upload->initialize($config);			   $filesCount = count($_FILES['files']['name']);			   				$this->form_validation->set_error_delimiters('<p>', '</p>');				$this->form_validation->set_rules('d_numero_de_compte','Numéro de compte', 'required');				$this->form_validation->set_rules('d_montant','Montant', 'required');								$this->form_validation->set_message('required', 'You missed the input {field}!');				if ($this->form_validation->run() == FALSE)				{					$output=array('error'=> validation_errors());					}else{				sleep(1);											$data= array(							'cl_aid'=>$_POST['loan_id'],							'admin_id'=>trim($this->session->userdata('id')),													'customer_id'=>$this->input->post('customar_id'),							'selected_field'=>trim($this->input->post('collateraltype')),												'd_numero_de_compte'=>$this->input->post('d_numero_de_compte'),							'd_montant'=>$this->input->post('d_montant'),							'loan_type'=>2,							'section'=>2,						);						$getid=$this->Common_model->insertRow('collateral',$data);						if($getid){			   						   for($count =0; $count<$filesCount; $count++)						   {							$_FILES["file"]["name"] = time().$_FILES["files"]['name'][$count];							$_FILES["file"]["type"] = $_FILES["files"]["type"][$count];							$_FILES["file"]["tmp_name"] =$_FILES["files"]["tmp_name"][$count];							$_FILES["file"]["error"] =$_FILES["files"]["error"][$count];							$_FILES["file"]["size"] =$_FILES["files"]["size"][$count];							if(!$this->upload->do_upload('file'))							{								//var_dump($_FILES["files"]);exit;								$output= array('error' => $this->upload->display_errors());							}else{								$filename = $this->upload->data();								$filedata= array(									'collateral_id'=>$getid,															'file_name'=>$filename['file_name'],									'file_type'=>$filename['file_type'],									'file_path'=>$filename['file_path'],									'full_path'=>$filename['full_path'],									'raw_name'=>$filename['raw_name'],									'orig_name'=>$_FILES["files"]['name'][$count],									'client_name'=>$filename['client_name'],									'file_extension'=>$filename['file_ext'],									'file_size'=>$filename['file_size'],									"section"=>1,									'loan_type'=>2,															);																			$rsid=$this->Common_model->insertRow('collateral_files',$filedata);								$details="Collateral Déposit ".$filesCount." files upload.";								$history_arr=array(									"cl_aid" =>$_POST['loan_id'],									"admin_id" =>$this->session->userdata('id'),									"customar_id" =>$this->input->post('customar_id'),									"loan_type"=>2,									"comment" =>$details,												"created" =>date('Y-m-d H:i:s')								);								$this->Common_model->insertRow('tracking_timeline',$history_arr);									$output=array('success' => $filesCount." files successfully upload.");									}								}						   }				}			   			   echo json_encode($output); 			   			}		}		public function uploadfile_collateral_maison()		{		 if($_FILES["files"]["name"] != '')			{			   $output = '';			   $config["upload_path"] = './assets/collateral/maison/';			   //$config["allowed_types"] = 'pdf|doc|docx|jpg|png|jpeg|xml';			   $config["allowed_types"] = '*';			   $config['max_size'] = '0';			   $config['encrypt_name'] = FALSE;			   $config['remove_spaces'] = TRUE;			   $config['file_ext_tolower'] = TRUE;			   			   $this->load->library('upload', $config);			   $this->upload->initialize($config);			   $filesCount = count($_FILES['files']['name']);			   			   $this->form_validation->set_error_delimiters('<p>', '</p>');				$this->form_validation->set_rules('m_type_de_proprietaire','Type de propriétaire', 'required');				$this->form_validation->set_rules('m_etatde_maison','Etat de la maison', 'required');				$this->form_validation->set_rules('m_annee_construction','Année de construction', 'required');				$this->form_validation->set_rules('m_nombre_de_piece','Nombre de pièce', 'required');				$this->form_validation->set_rules('m_adresse','Adresse', 'required');				$this->form_validation->set_rules('m_titre_foncier','Titre foncier', 'required');				$this->form_validation->set_rules('m_superficie','Superficie', 'required');				//$this->form_validation->set_rules('m_commentaire','Commentaire', 'required');				$this->form_validation->set_message('required', 'You missed the input {field}!');				if ($this->form_validation->run() == FALSE)				{					$output=array('error'=> validation_errors());					}				else				{				sleep(2);					$data= array(						'cl_aid'=>$_POST['loan_id'],						'admin_id'=>trim($this->session->userdata('id')),												'customer_id'=>$this->input->post('customar_id'),						'selected_field'=>trim($this->input->post('collateraltype')),						'm_type_de_proprietaire'=>trim($this->input->post('m_type_de_proprietaire')),						'm_etatde_maison'=>trim($this->input->post('m_etatde_maison')),						'm_annee_construction'=>trim($this->input->post('m_annee_construction')),						'm_nombre_de_piece'=>trim($this->input->post('m_nombre_de_piece')),						'm_adresse'=>trim($this->input->post('m_adresse')),						'm_titre_foncier'=>trim($this->input->post('m_titre_foncier')),						'm_superficie'=>trim($this->input->post('m_superficie')),						'm_commentaire'=>trim($this->input->post('m_commentaire')),						'section'=>2,						'loan_type'=>2,					);	   					$getid=$this->Common_model->insertRow('collateral',$data);					if($getid)					{			   						for($count =0; $count<$filesCount; $count++)						{							$_FILES["file"]["name"] = time().$_FILES["files"]['name'][$count];							$_FILES["file"]["type"] = $_FILES["files"]["type"][$count];							$_FILES["file"]["tmp_name"] = $_FILES["files"]["tmp_name"][$count];							$_FILES["file"]["error"] = $_FILES["files"]["error"][$count];							$_FILES["file"]["size"] = $_FILES["files"]["size"][$count];							if(!$this->upload->do_upload('file'))							{								$output= array('error' => $this->upload->display_errors());							}							else{								$filename = $this->upload->data();									$filedata= array(										'collateral_id'=>$getid,																'file_name'=>$filename['file_name'],										'file_type'=>$filename['file_type'],										'file_path'=>$filename['file_path'],										'full_path'=>$filename['full_path'],										'raw_name'=>$filename['raw_name'],										'orig_name'=>$_FILES["files"]['name'][$count],										'client_name'=>$filename['client_name'],										'file_extension'=>$filename['file_ext'],										'file_size'=>$filename['file_size'],										'section'=>2,										'loan_type'=>2,																);											$rsid=$this->Common_model->insertRow('collateral_files',$filedata);								$details="Collateral Maison ".$filesCount." files upload.";								$history_arr=array(									"cl_aid" =>$_POST['loan_id'],									"admin_id" =>$this->session->userdata('id'),									"customar_id" =>$this->input->post('customar_id'),									"loan_type"=>2,									"comment" =>$details,												"created" =>date('Y-m-d H:i:s')								);								$this->Common_model->insertRow('tracking_timeline',$history_arr);								$output=array('success' => $filesCount." files successfully upload.");							}						}					}				}				echo json_encode($output); 			}	}		public function uploadfile_collateral_excemption()	{		sleep(1);		if($_FILES["files"]["name"] != '')		{			$output = '';			$config["upload_path"] = './assets/collateral/excemption';			//$config["allowed_types"] = 'pdf|doc|docx|jpg|png|jpeg|xml';			$config["allowed_types"] = '*';			$config['max_size'] = '0';			$config['encrypt_name'] = FALSE;			$config['remove_spaces'] = TRUE;			$config['file_ext_tolower'] = TRUE;			$this->load->library('upload', $config);			$this->upload->initialize($config);			$filesCount = count($_FILES['files']['name']);			$data= array(				'cl_aid'=>$_POST['loan_id'],				'admin_id'=>trim($this->session->userdata('id')),				'customer_id'=>trim($this->input->post("customar_id")),					'selected_field'=>trim($this->input->post('collateraltype')),				'section'=>2,				'loan_type'=>2,			);			$getid=$this->Common_model->insertRow('collateral',$data);			if($getid)			{			   for($count =0; $count<$filesCount; $count++)			   {					$_FILES["file"]["name"] = time().$_FILES["files"]['name'][$count];					$_FILES["file"]["type"] = $_FILES["files"]["type"][$count];					$_FILES["file"]["tmp_name"] = $_FILES["files"]["tmp_name"][$count];					$_FILES["file"]["error"] = $_FILES["files"]["error"][$count];					$_FILES["file"]["size"] = $_FILES["files"]["size"][$count];				if(!$this->upload->do_upload('file'))				{					$output= array('error' => $this->upload->display_errors());				}else{					$filename = $this->upload->data();					$filedata= array(						'collateral_id'=>$getid,												'file_name'=>$filename['file_name'],						'file_type'=>$filename['file_type'],						'file_path'=>$filename['file_path'],						'full_path'=>$filename['full_path'],						'raw_name'=>$filename['raw_name'],						'orig_name'=>$_FILES["files"]['name'][$count],						'client_name'=>$filename['client_name'],						'file_extension'=>$filename['file_ext'],						'file_size'=>$filename['file_size'],						'section'=>2,						'loan_type'=>2,												);					$rsid=$this->Common_model->insertRow('collateral_files',$filedata);					$details="Collateral Excemption ".$filesCount." files upload.";					$history_arr=array(						"cl_aid" =>$_POST['loan_id'],						"admin_id" =>$this->session->userdata('id'),						"customar_id" =>$this->input->post('customar_id'),						"loan_type"=>2,						"comment" =>$details,									"created" =>date('Y-m-d H:i:s')					);					$this->Common_model->insertRow('tracking_timeline',$history_arr);					$output=array('success' => $filesCount." files successfully upload.");					}				}			}			  			echo json_encode($output); 			   		}	}	public function collateral_preview()	{			$html ='';		//sleep(2);		$collateralfiles=$this->Credit_Conso_Model->get_collateralFiles($this->input->post('id'));		//echo "<pre>", print_r($collateralfiles),"</pre>";		//exit;		if(!empty($collateralfiles[0]["selected_field"])){			$displaydata=$collateralfiles[0]["selected_field"];		}else{			$displaydata='';		}						$html .='<div class="modal-header">';			$html .='<button type="button" class="close" data-dismiss="modal">&times;</button>';			$html .='<h4 class="modal-title heading lead">'.$displaydata.' Documents</h4>';			$html .='</div>';			$html .='<div class="modal-body">';			$html .='<ul class="list-group">';			$i=1;			if(!empty($collateralfiles)){				foreach($collateralfiles AS $files){									$html .='<li class="list-group-item alert alert-success">';							if($files['file_extension']=='.pdf'){								$html .='<span class="badge"><i class="fa fa fa-file-pdf-o fa-fw fa-lg"></i></span>';							}else if($files['file_extension']=='.docx' || $files['file_extension']=='.doc'){								$html .='<span class="badge"><i class="fa fa-file-word-o fa-fw fa-lg"></i></span>';							}							else if($files['file_extension']=='.jpeg' || $files['file_extension']=='.jpg' || $files['file_extension']=='.png'){								$html .='<span class="badge"><i class="fa fa-file-image-o fa-fw fa-lg"></i></span>';							}						 $html .=$i."-". ucwords($files['orig_name']);					$html .='</li>';							$i++;			 }			}			$html .='</ul>';			$html .='</div>';			$html .='<div class="modal-footer">';			$html .='<button type="button" class="btn btn-danger waves-effect waves-light"  data-dismiss="modal">Close</button>';			$html .='</div>';					echo $html;			}	public function download_collateralvehicule(){		$createdzipsystemdocs = 'collateral.vehicule';		$id=$this->uri->segment(3);        $this->load->library('zip');        $this->load->helper('download');                $files = $this->Credit_Conso_Model->get_collateralFiles($id);                 foreach ($files as $file) {			            $paths = './assets/collateral/vehicule/'.$file['file_name'];                        $this->zip->add_data($paths,file_get_contents($paths));            }        $this->zip->download($createdzipsystemdocs.'.zip');	}		public function download_collateraldeposit(){		$createdzipsystemdocs = 'collateral.deposit';		$id=$this->uri->segment(3);        $this->load->library('zip');        $this->load->helper('download');                $files = $this->Credit_Conso_Model->get_collateralFiles($id);                 foreach ($files as $file) {			            $paths = './assets/collateral/deposit/'.$file['file_name'];                        $this->zip->add_data($paths,file_get_contents($paths));            }        $this->zip->download($createdzipsystemdocs.'.zip');	}	public function download_collateralmaison(){		$createdzipsystemdocs = 'collateral.maison';		$id=$this->uri->segment(3);        $this->load->library('zip');        $this->load->helper('download');                $files = $this->Credit_Conso_Model->get_collateralFiles($id);                 foreach ($files as $file) {			            $paths = './assets/collateral/maison/'.$file['file_name'];                        $this->zip->add_data($paths,file_get_contents($paths));            }        $this->zip->download($createdzipsystemdocs.'.zip');	}		public function download_collateralexcemption(){		$createdzipsystemdocs = 'collateral.excemption';		$id=$this->uri->segment(3);        $this->load->library('zip');        $this->load->helper('download');                $files = $this->Credit_Conso_Model->get_collateralFiles($id);                 foreach ($files as $file) {			            $paths = './assets/collateral/excemption/'.$file['file_name'];                        $this->zip->add_data($paths,file_get_contents($paths));            }        $this->zip->download($createdzipsystemdocs.'.zip');	}//Document System forms---- COONVENTION DE CREDIT		public function promissory_note()	{	    error_reporting(0);		$segmentid=$this->uri->segment(3);					$getHtmlagreement=$this->generate_promissory_note_form($segmentid);		echo $getHtmlagreement;		$filename=$segmentid.'-'.time();		//$abc=pdf_po_create_agreement_form($getHtmlagreement,$filename,true);	}	public function	generate_promissory_note_form($id)	{				//error_reporting(0);		//echo $id; exit;		$this->data['appformD']=$this->Credit_Conso_Model->get_single_loan_details($id);		// print_r($this->data['appformD']);		// die;		$customerID=$this->data['appformD'][0]['customar_id'];		$this->data['loantax']=$this->PP_Consumer_Loans_Model->get_taxType();		$this->data['loandetails']=$this->PP_Consumer_Loans_Model->get_new_application_form();		$this->data['tracking_timeline']=$this->PP_Consumer_Loans_Model->get_tracking_timeline($id);		$this->data['fees']=$this->PP_Consumer_Loans_Model->get_All_fees();		$this->data['int_email']=$this->PP_Consumer_Loans_Model->get_interaction_data($id);				$this->data['secteurs']=$this->PP_Consumer_Loans_Model->get_target_list_Secteurs();		$this->data['cat_emp']=$this->PP_Consumer_Loans_Model->get_category_of_employers();		$this->data['contract_type']=$this->PP_Consumer_Loans_Model->get_type_of_contract();		$this->data['collateral']=$this->PP_Consumer_Loans_Model->get_collateral($id);		// $this->data['customersd']=$this->PP_Consumer_Loans_Model->get_customersdetailsinfo($this->data['appformD'][0]['customar_id']);		$this->data['risk_analysis']=$this->PP_Consumer_Loans_Model->get_risk_analysisfile($id);		// $this->data['pinfo']=$this->PP_Consumer_Loans_Model->get_pInformation($customerID);		// $this->data['adinfo']=$this->PP_Consumer_Loans_Model->get_adInformation($customerID);		// $this->data['empinfo']=$this->PP_Consumer_Loans_Model->get_empInformation($customerID);		// $this->data['adrs']=$this->PP_Consumer_Loans_Model->get_adrsInformation($customerID);		// $this->data['bankinfo']=$this->PP_Consumer_Loans_Model->get_bnkInformation($customerID);		// $this->data['otherinfo']=$this->PP_Consumer_Loans_Model->get_oInformation($customerID);				$this->data['riskcurrentmonthlyvrefit']=$this->Credit_Conso_Model->get_current_monthly_credit($id);		$this->data['riskpaymentnewloan']=$this->Credit_Conso_Model->get_monthly_payment_new_loan($id);		$this->data['riskfsituation']=$this->Credit_Conso_Model->get_financial_situation($id);		$this->data['applicableloanratio']=$this->PP_Consumer_Loans_Model->get_applicableloan_ratio();				return  $this->load->view('superadmin/atlantique_preet_scolaire_formulaire_en_anglais',$this->data,true);		}	// Documet BILLET DE ORDER		public function billetaorder()	{		error_reporting(0);		$segmentid=$this->uri->segment(3);					$getHtmlagreement=$this->generate_Billet_aÇ_Ordre_Credit_Scolaire($segmentid);		echo $getHtmlagreement;		$filename=$segmentid.'-'.time();		 	}		public function generate_Billet_aÇ_Ordre_Credit_Scolaire($id)	{		 error_reporting(0);		$this->data['appformD']=$this->Credit_Conso_Model->get_single_loan_details($id);		$customerID=$this->data['appformD'][0]['customar_id'];		$this->data['loantax']=$this->PP_Consumer_Loans_Model->get_taxType();		$this->data['loandetails']=$this->PP_Consumer_Loans_Model->get_new_application_form();		$this->data['tracking_timeline']=$this->PP_Consumer_Loans_Model->get_tracking_timeline($id);		$this->data['fees']=$this->PP_Consumer_Loans_Model->get_All_fees();		$this->data['int_email']=$this->PP_Consumer_Loans_Model->get_interaction_data($id);				$this->data['secteurs']=$this->PP_Consumer_Loans_Model->get_target_list_Secteurs();		$this->data['cat_emp']=$this->PP_Consumer_Loans_Model->get_category_of_employers();		$this->data['contract_type']=$this->PP_Consumer_Loans_Model->get_type_of_contract();		$this->data['collateral']=$this->PP_Consumer_Loans_Model->get_collateral($id);		// $this->data['customersd']=$this->PP_Consumer_Loans_Model->get_customersdetailsinfo($this->data['appformD'][0]['customar_id']);		$this->data['risk_analysis']=$this->PP_Consumer_Loans_Model->get_risk_analysisfile($id);			$this->data['riskcurrentmonthlyvrefit']=$this->PP_Consumer_Loans_Model->get_current_monthly_credit($id);		$this->data['riskpaymentnewloan']=$this->PP_Consumer_Loans_Model->get_monthly_payment_new_loan($id);		$this->data['riskfsituation']=$this->PP_Consumer_Loans_Model->get_financial_situation($id);		$this->data['applicableloanratio']=$this->PP_Consumer_Loans_Model->get_applicableloan_ratio();		return  $this->load->view('superadmin/BilletOrdre',$this->data,true);	}	// MEMO DE MISE EN PLACE		public function memo_of_setting_up()	{		error_reporting(0);		$segmentid=$this->uri->segment(3);					$getHtmlagreement=$this->generate_memo_of_setting_up_Credit_Scolaire($segmentid);		echo $getHtmlagreement;		$filename=$segmentid.'-'.time();		 	}		public function generate_memo_of_setting_up_Credit_Scolaire($id)	{		 error_reporting(0);		$this->data['appformD']=$this->Credit_Conso_Model->get_single_loan_details($id);				$this->data['loantax']=$this->PP_Consumer_Loans_Model->get_taxType();		$this->data['loandetails']=$this->PP_Consumer_Loans_Model->get_new_application_form();		$this->data['tracking_timeline']=$this->PP_Consumer_Loans_Model->get_tracking_timeline($id);		$this->data['fees']=$this->PP_Consumer_Loans_Model->get_All_fees();		$this->data['int_email']=$this->PP_Consumer_Loans_Model->get_interaction_data($id);				$this->data['secteurs']=$this->PP_Consumer_Loans_Model->get_target_list_Secteurs();		$this->data['cat_emp']=$this->PP_Consumer_Loans_Model->get_category_of_employers();		$this->data['contract_type']=$this->PP_Consumer_Loans_Model->get_type_of_contract();		$this->data['collateral']=$this->PP_Consumer_Loans_Model->get_collateral($id);		// $this->data['customersd']=$this->PP_Consumer_Loans_Model->get_customersdetailsinfo($this->data['appformD'][0]['customar_id']);		$this->data['risk_analysis']=$this->PP_Consumer_Loans_Model->get_risk_analysisfile($id);				$this->data['riskcurrentmonthlyvrefit']=$this->PP_Consumer_Loans_Model->get_current_monthly_credit($id);		$this->data['riskpaymentnewloan']=$this->PP_Consumer_Loans_Model->get_monthly_payment_new_loan($id);		$this->data['riskfsituation']=$this->PP_Consumer_Loans_Model->get_financial_situation($id);		$this->data['applicableloanratio']=$this->PP_Consumer_Loans_Model->get_applicableloan_ratio();		return  $this->load->view('superadmin/memo-de-mise-em-place',$this->data,true);	}	/*System Docs CAUTION SCOLAIR ET PERSONEL*/	public function credit_agreement()	{		error_reporting(0);		$segmentid=$this->uri->segment(3);		$getHtmlagreement=$this->generate_credit_agreement_form($segmentid);		echo $getHtmlagreement;		$filename=$segmentid.'-'.time();		//$abc=pdf_po_create_agreement_form($getHtmlagreement,$filename,true);	}	public function generate_credit_agreement_form($id)	{		$this->data['appformD']=$this->Credit_Conso_Model->get_single_loan_details($id);		$customerID=$this->data['appformD'][0]['customar_id'];		$this->data['loantax']=$this->PP_Consumer_Loans_Model->get_taxType();		$this->data['loandetails']=$this->PP_Consumer_Loans_Model->get_new_application_form();		$this->data['tracking_timeline']=$this->PP_Consumer_Loans_Model->get_tracking_timeline($id);		$this->data['fees']=$this->PP_Consumer_Loans_Model->get_All_fees();		$this->data['int_email']=$this->PP_Consumer_Loans_Model->get_interaction_data($id);				$this->data['secteurs']=$this->PP_Consumer_Loans_Model->get_target_list_Secteurs();		$this->data['cat_emp']=$this->PP_Consumer_Loans_Model->get_category_of_employers();		$this->data['contract_type']=$this->PP_Consumer_Loans_Model->get_type_of_contract();		$this->data['collateral']=$this->PP_Consumer_Loans_Model->get_collateral($id);		// $this->data['customersd']=$this->PP_Consumer_Loans_Model->get_customersdetailsinfo($this->data['appformD'][0]['customar_id']);		$this->data['risk_analysis']=$this->PP_Consumer_Loans_Model->get_risk_analysisfile($id);				$this->data['c_loan']=$this->PP_Consumer_Loans_Model->get_amortization_record($id);				$this->data['riskcurrentmonthlyvrefit']=$this->PP_Consumer_Loans_Model->get_current_monthly_credit($id);		$this->data['riskpaymentnewloan']=$this->PP_Consumer_Loans_Model->get_monthly_payment_new_loan($id);		$this->data['riskfsituation']=$this->PP_Consumer_Loans_Model->get_financial_situation($id);		$this->data['applicableloanratio']=$this->PP_Consumer_Loans_Model->get_applicableloan_ratio();		return  $this->load->view('superadmin/atlantique_pret_scolaire_2017_cg_en_anglais',$this->data,true);	}		// Document System FORMULAIRE ADHESION AU FOND DE GARANTIE	public function formulaire_adhesion_aufoud_de_grantie()	{		error_reporting(0);		$segmentid=$this->uri->segment(3);					$getHtmlagreement=$this->generate_formulaire_adhesion_aufoud_de_grantie_credit_scolaire($segmentid);		echo $getHtmlagreement;		$filename=$segmentid.'-'.time();	}	public function generate_formulaire_adhesion_aufoud_de_grantie_credit_scolaire($id)	{		error_reporting(0);		$this->data['appformD']=$this->Credit_Conso_Model->get_single_loan_details($id);		$customerID=$this->data['appformD'][0]['customar_id'];		$this->data['loantax']=$this->PP_Consumer_Loans_Model->get_taxType();		$this->data['loandetails']=$this->PP_Consumer_Loans_Model->get_new_application_form();		$this->data['tracking_timeline']=$this->PP_Consumer_Loans_Model->get_tracking_timeline($id);		$this->data['fees']=$this->PP_Consumer_Loans_Model->get_All_fees();		$this->data['int_email']=$this->PP_Consumer_Loans_Model->get_interaction_data($id);				$this->data['secteurs']=$this->PP_Consumer_Loans_Model->get_target_list_Secteurs();		$this->data['cat_emp']=$this->PP_Consumer_Loans_Model->get_category_of_employers();		$this->data['contract_type']=$this->PP_Consumer_Loans_Model->get_type_of_contract();		$this->data['collateral']=$this->PP_Consumer_Loans_Model->get_collateral($id);		// $this->data['customersd']=$this->PP_Consumer_Loans_Model->get_customersdetailsinfo($this->data['appformD'][0]['customar_id']);		$this->data['risk_analysis']=$this->PP_Consumer_Loans_Model->get_risk_analysisfile($id);		// $this->data['pinfo']=$this->PP_Consumer_Loans_Model->get_pInformation($customerID);		// $this->data['adinfo']=$this->PP_Consumer_Loans_Model->get_adInformation($customerID);		// $this->data['empinfo']=$this->PP_Consumer_Loans_Model->get_empInformation($customerID);		// $this->data['adrs']=$this->PP_Consumer_Loans_Model->get_adrsInformation($customerID);		// $this->data['bankinfo']=$this->PP_Consumer_Loans_Model->get_bnkInformation($customerID);		// $this->data['otherinfo']=$this->PP_Consumer_Loans_Model->get_oInformation($customerID);		$this->data['c_loan']=$this->PP_Consumer_Loans_Model->get_amortization_record($id);						$this->data['riskcurrentmonthlyvrefit']=$this->PP_Consumer_Loans_Model->get_current_monthly_credit($id);		$this->data['riskpaymentnewloan']=$this->PP_Consumer_Loans_Model->get_monthly_payment_new_loan($id);		$this->data['riskfsituation']=$this->PP_Consumer_Loans_Model->get_financial_situation($id);		$this->data['applicableloanratio']=$this->PP_Consumer_Loans_Model->get_applicableloan_ratio();		return  $this->load->view('superadmin/formulaire_adhesion_aufoud_de_grantie_credit_scolaire',$this->data,true);	}	// Document System FORMULAIRE DE DEMANDE CREDIT		public function formulaire_de_demande_credit()	{		error_reporting(0);		$segmentid=$this->uri->segment(3);					$getHtmlagreement=$this->generate_formulaire_de_demande_credit_scolaire($segmentid);		echo $getHtmlagreement;		$filename=$segmentid.'-'.time();	}		public function generate_formulaire_de_demande_credit_scolaire($id)	{		error_reporting(0);		$this->data['appformD']=$this->Credit_Conso_Model->get_single_loan_details($id);		$customerID=$this->data['appformD'][0]['customar_id'];		$this->data['loantax']=$this->PP_Consumer_Loans_Model->get_taxType();		$this->data['loandetails']=$this->PP_Consumer_Loans_Model->get_new_application_form();		$this->data['tracking_timeline']=$this->PP_Consumer_Loans_Model->get_tracking_timeline($id);		$this->data['fees']=$this->PP_Consumer_Loans_Model->get_All_fees();		$this->data['int_email']=$this->PP_Consumer_Loans_Model->get_interaction_data($id);				$this->data['secteurs']=$this->PP_Consumer_Loans_Model->get_target_list_Secteurs();		$this->data['cat_emp']=$this->PP_Consumer_Loans_Model->get_category_of_employers();		$this->data['contract_type']=$this->PP_Consumer_Loans_Model->get_type_of_contract();		$this->data['collateral']=$this->PP_Consumer_Loans_Model->get_collateral($id);		// $this->data['customersd']=$this->PP_Consumer_Loans_Model->get_customersdetailsinfo($this->data['appformD'][0]['customar_id']);		$this->data['risk_analysis']=$this->PP_Consumer_Loans_Model->get_risk_analysisfile($id);		// $this->data['pinfo']=$this->PP_Consumer_Loans_Model->get_pInformation($customerID);		// $this->data['adinfo']=$this->PP_Consumer_Loans_Model->get_adInformation($customerID);		// $this->data['empinfo']=$this->PP_Consumer_Loans_Model->get_empInformation($customerID);		// $this->data['adrs']=$this->PP_Consumer_Loans_Model->get_adrsInformation($customerID);		// $this->data['bankinfo']=$this->PP_Consumer_Loans_Model->get_bnkInformation($customerID);		// $this->data['otherinfo']=$this->PP_Consumer_Loans_Model->get_oInformation($customerID);				$this->data['riskcurrentmonthlyvrefit']=$this->PP_Consumer_Loans_Model->get_current_monthly_credit($id);		$this->data['riskpaymentnewloan']=$this->PP_Consumer_Loans_Model->get_monthly_payment_new_loan($id);		$this->data['riskfsituation']=$this->PP_Consumer_Loans_Model->get_financial_situation($id);		$this->data['applicableloanratio']=$this->PP_Consumer_Loans_Model->get_applicableloan_ratio();		return  $this->load->view('superadmin/formulaire-de-demande-credit',$this->data,true);	}		public function download_credit_agreement_form()	{	    error_reporting(0);		$segmentid=$this->uri->segment(3);			$this->data['appformD']=$this->Credit_Scolair_Model->get_single_loan_details($segmentid);		$customerID=$this->data['appformD'][0]['customar_id'];			$this->data['pinfo']=$this->PP_Credit_Scholar_Model->get_pInformation($customerID);		$this->data['adinfo']=$this->PP_Credit_Scholar_Model->get_adInformation($customerID);		$this->data['otherinfo']=$this->PP_Credit_Scholar_Model->get_oInformation($customerID);		$this->data['bankinfo']=$this->PP_Credit_Scholar_Model->get_bnkInformation($customerID);		$this->data['riskfsituation']=$this->PP_Credit_Scholar_Model->get_financial_situation($segmentid);		$this->data['riskpaymentnewloan']=$this->PP_Credit_Scholar_Model->get_monthly_payment_new_loan($segmentid);		$this->data['adrs']=$this->PP_Credit_Scholar_Model->get_adrsInformation($customerID);		$this->data['empinfo']=$this->PP_Credit_Scholar_Model->get_empInformation($customerID);		// fiche atlantique		$this->data['fiche_data'] =  $this->Credit_Conso_Model->get_fiche_atlantique($segmentid);		$this->data['echeance_amount'] = $this->data['appformD']['pmnt'] + $this->data['riskpaymentnewloan']['decouvert'] + $this->data['riskpaymentnewloan']['cmt'] + $this->data['riskpaymentnewloan']['cct'];		$net_salary =  $this->data['riskfsituation']['net_salary'] ?: '100000';		$income_ratio =  $this->data['$riskfsituation']['income_ratio'] ?: '50';		$this->data['quotite_amount'] =  round((($net_salary * $income_ratio)/100));		$current_monthly_payment = $this->data['riskfsituation']['current_monthly_payments'];		//$new_monthly_payment = $this->data['riskfsituation'][0]['new_monthly_payment'] ?: '50';                if($this->data['riskfsituation'][0]['new_monthly_payment']){			$new_monthly_payment = $this->data['riskfsituation']['new_monthly_payment'] ?: '50';		}		else{			$new_monthly_payment = $this->data['echeance_amount'];		}		$sum =  $current_monthly_payment + $new_monthly_payment;		 $new_amt = $sum/$net_salary;		$this->data['debt_ratio']  =  round($new_amt*100);				$this->load->view('superadmin/updated_fiche_atlantique2020',$this->data);		}	public function download_credit_agreement_form2()	{	    error_reporting(0);		$segmentid=$this->uri->segment(3);			$this->load->view('superadmin/updated_atlantique_cg_french2020');			}	public function memo_of_setting_up_scolair()	{		error_reporting(0);		$segmentid=$this->uri->segment(3);					$getHtmlagreement=$this->generate_Billet_ac_Ordre_Credit_Scolaire($segmentid);		echo $getHtmlagreement;		$filename=$segmentid.'-'.time();		 	}	public function generate_Billet_ac_Ordre_Credit_Scolaire($id)	{		 error_reporting(0);		$this->data['appformD']=$this->Credit_Scolair_Model->get_single_loan_details($id);		$customerID=$this->data['appformD'][0]['customar_id'];			$this->data['loantax']=$this->PP_Credit_Scholar_Model->get_taxType();		$this->data['loandetails']=$this->PP_Credit_Scholar_Model->get_new_application_form();		$this->data['tracking_timeline']=$this->PP_Credit_Scholar_Model->get_tracking_timeline($id);		$this->data['fees']=$this->PP_Credit_Scholar_Model->get_All_fees();		$this->data['int_email']=$this->PP_Credit_Scholar_Model->get_interaction_data($id);		$this->data['sys_docs']=$this->PP_Credit_Scholar_Model->get_filedata($id);		$this->data['clist_docs']=$this->PP_Credit_Scholar_Model->get_check_list_customer_documents($id);		$this->data['secteurs']=$this->PP_Credit_Scholar_Model->get_target_list_Secteurs();		$this->data['cat_emp']=$this->PP_Credit_Scholar_Model->get_category_of_employers();		$this->data['contract_type']=$this->PP_Credit_Scholar_Model->get_type_of_contract();		$this->data['collateral']=$this->PP_Credit_Scholar_Model->get_collateral($id);		$this->data['customersd']=$this->PP_Credit_Scholar_Model->get_customersdetailsinfo($this->data['appformD'][0]['customar_id']);		$this->data['risk_analysis']=$this->PP_Credit_Scholar_Model->get_risk_analysisfile($id);		$this->data['pinfo']=$this->PP_Credit_Scholar_Model->get_pInformation($customerID);		$this->data['adinfo']=$this->PP_Credit_Scholar_Model->get_adInformation($customerID);		$this->data['empinfo']=$this->PP_Credit_Scholar_Model->get_empInformation($customerID);		$this->data['adrs']=$this->PP_Credit_Scholar_Model->get_adrsInformation($customerID);		$this->data['bankinfo']=$this->PP_Credit_Scholar_Model->get_bnkInformation($customerID);		$this->data['otherinfo']=$this->PP_Credit_Scholar_Model->get_oInformation($customerID);		$this->data['riskcurrentmonthlyvrefit']=$this->PP_Credit_Scholar_Model->get_current_monthly_credit($id);		$this->data['riskpaymentnewloan']=$this->PP_Credit_Scholar_Model->get_monthly_payment_new_loan($id);		$this->data['riskfsituation']=$this->PP_Credit_Scholar_Model->get_financial_situation($id);		$this->data['applicableloanratio']=$this->PP_Credit_Scholar_Model->get_applicableloan_ratio();                                //print_r($this->data); die;		return  $this->load->view('superadmin/BilletOrdre',$this->data,true);	}}